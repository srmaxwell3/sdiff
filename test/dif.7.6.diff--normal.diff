25,26c25
< DiffFormat diffFormat = SideBySide;
< 
---
> DiffFormat diffFormat = Context;
28,29c27,28
< unsigned optPageWidth = 130;
< unsigned optVerbose = 2;
---
> 
> int optVerbose = 1;
49c48
<     fprintf (out, "}}\t%s\n", c_str ());
---
>     fprintf (out, "}}\t%s", c_str ());
111d109
<         fflush (stderr);
120,121d117
<         text.erase (text.end () - 1);
< 
134d129
<         fflush (stderr);
138d132
<       fflush (stderr);
146d139
<     fflush (stderr);
176d168
<     fflush (stderr);
219d210
<     fflush (stderr);
221c212
<     if (2 < optVerbose) {
---
>     if (1 < optVerbose) {
224d214
<         fflush (stderr);
227d216
<           fflush (stderr);
242d230
<     fflush (stderr);
319,320c307
<     fflush (stderr);
<     if (2 < optVerbose) {
---
>     if (1 < optVerbose) {
323d309
<         fflush (stderr);
326d311
<           fflush (stderr);
341d325
<     fflush (stderr);
417d400
<     fflush (stderr);
419c402
<     if (2 < optVerbose) {
---
>     if (1 < optVerbose) {
422d404
<         fflush (stderr);
425d406
<           fflush (stderr);
441d421
<     fflush (stderr);
481d460
<     fflush (stderr);
483c462
<     if (2 < optVerbose) {
---
>     if (1 < optVerbose) {
486d464
<         fflush (stderr);
489d466
<           fflush (stderr);
506d482
<     fflush (stderr);
655d630
<     fflush (stderr);
657c632
<     if (2 < optVerbose) {
---
>     if (1 < optVerbose) {
660d634
<         fflush (stderr);
663d636
<           fflush (stderr);
680d652
< void pass6y ();
707c679
<     pass6y ();
---
>     pass6s ();
737,738c709
<     fprintf (stderr, "# Pass #6c (walking the differences)...\n");
<     fflush (stderr);
---
>     fprintf (stderr, "# Pass #6u (walking the differences)...\n");
766c737
<     // We're now looking at at least 1 delete or insert, so a window
---
>     // We're looking at at least 1 delete or insert, so a window
769,775c740,741
<     int boOldWindow = max (0, int (o) - int (optCopyContext));
<     int boNewWindow = max (0, int (n) - int (optCopyContext));
< 
<     if (1 < optVerbose) {
<       fprintf (stderr, "boOldWindow = %d, boNewWindow = %d\n", boOldWindow, boNewWindow);
<       fflush (stderr);
<     }
---
>     int boOldWindow = max (0, int (boDeletes) - int(optCopyContext));
>     int eoOldWindow = min (int (lines[0].size ()), int(o) + int(optCopyContext));
777c743
<     // Look for the end of the current window.
---
>     // Look for the end of the window.
779,783c745,746
<     int eoOldWindow;
<     int eoNewWindow;
< 
<     bool widenWindow = true;
<     while (widenWindow && o < lines[0].size () || n < lines[1].size ()) {
---
>     bool widenWindow = false;
>     do {
795,796c758,761
<       // This context will end optCopyContext matched lines past the
<       // last set of deletes or inserts we find.
---
>       // ...  This context will end optCopyContext lines past the last
>       // set of deletes or inserts we find.  However, since another
>       // window could follow, we look 2 * optCopyContext ahead for
>       // another delete or insert.
798,799c763
<       widenWindow = false;
<       for (unsigned l = 0; !widenWindow && l < optCopyContext; l += 1) {
---
>       for (unsigned l = 0; l < (2 * optCopyContext); i += 1) {
801c765,767
<           widenWindow |= lines[0][o].l == ~0;
---
>           if (widenWindow |= lines[0][o].l == ~0) {
>             break;
>           }
805c771,773
<           widenWindow |= lines[1][n].l == ~0;
---
>           if (widenWindow |= lines[1][o].l == ~0) {
>             break;
>           }
809,828c777
< 
<       eoOldWindow = o;
<       eoNewWindow = n;
< 
<       // However, since another window could follow, we look
<       // optCopyContext ahead for another delete or insert.
< 
<       if (!widenWindow) {
<         for (unsigned l = 0; l < (2 * optCopyContext + 1); l += 1) {
<           if (o < lines[0].size ()) {
<             widenWindow |= lines[0][o].l == ~0;
<             o += 1;
<           }
<           if (n < lines[1].size ()) {
<             widenWindow |= lines[1][n].l == ~0;
<             n += 1;
<           }
<         }
<       }
<     }
---
>     } while (widenWindow);
832,835c781,782
<     if (1 < optVerbose) {
<       fprintf (stderr, "eoOldWindow = %d, eoNewWindow = %d\n", eoOldWindow, eoNewWindow);
<       fflush (stderr);
<     }
---
>     int boNewWindow = max (0, int (boInserts) - int (optCopyContext));
>     int eoNewWindow = min (int (lines[1].size ()), int(n) + int (optCopyContext));
842c789
<     fprintf (stdout, "*** %d,%d ****\n", boOldWindow + 1, eoOldWindow);
---
>     fprintf (stdout, "*** %d,%d ****\n", boOldWindow + 1, eoOldWindow + 1);
847c794
<     while (o < eoOldWindow || n < eoNewWindow) {
---
>     while (o < eoOldWindow && n < eoNewWindow) {
878c825
<           fprintf (stdout, "! %s\n", lines[0][l].line->c_str ());
---
>           fprintf (stdout, "! %s", lines[0][l].line->c_str ());
885c832
<           fprintf (stdout, "- %s\n", lines[0][l].line->c_str ());
---
>           fprintf (stdout, "- %s", lines[0][l].line->c_str ());
891c838
<       fprintf (stdout, "  %s\n", lines[0][o].line->c_str ());
---
>       fprintf (stdout, "  %s", lines[0][l].line->c_str ());
896c843
<     fprintf (stdout, "--- %d,%d ----\n", boNewWindow + 1, eoNewWindow);
---
>     fprintf (stdout, "--- %d,%d ----\n", boNewWindow + 1, eoNewWindow + 1);
932c879
<           fprintf (stdout, "! %s\n", lines[1][l].line->c_str ());
---
>           fprintf (stdout, "! %s", lines[1][l].line->c_str ());
939c886
<           fprintf (stdout, "+ %s\n", lines[1][l].line->c_str ());
---
>           fprintf (stdout, "+ %s", lines[1][l].line->c_str ());
945c892
<       fprintf (stdout, "  %s\n", lines[1][n].line->c_str ());
---
>       fprintf (stdout, "  %s", lines[1][l].line->c_str ());
949,953d895
< 
<     // Reset to the end of the current window.
< 
<     o = eoOldWindow;
<     n = eoNewWindow;
958,959d899
<   fprintf (stderr, "pass6e() is unimplemented!\n");
<   fflush (stderr);
963,964d902
<   fprintf (stderr, "pass6i() is unimplemented!\n");
<   fflush (stderr);
971d908
<     fflush (stderr);
1025c962
<         fprintf (stdout, "< %s\n", lines[0][l].line->c_str ());
---
>         fprintf (stdout, "< %s", lines[0][l].line->c_str ());
1027c964
<       fprintf (stdout, "---\n");
---
>       fprintf (stderr, "---\n");
1029c966
<         fprintf (stdout, "> %s\n", lines[1][l].line->c_str ());
---
>         fprintf (stdout, "> %s", lines[1][l].line->c_str ());
1041c978
<         fprintf (stdout, "< %s\n", lines[0][l].line->c_str ());
---
>         fprintf (stdout, "< %s", lines[0][l].line->c_str ());
1053c990
<         fprintf (stdout, "> %s\n", lines[1][l].line->c_str ());
---
>         fprintf (stdout, "> %s", lines[1][l].line->c_str ());
1065,1066d1001
<   fprintf (stderr, "pass6r() is unimplemented!\n");
<   fflush (stderr);
1070,1071d1004
<   fprintf (stderr, "pass6s() is unimplemented!\n");
<   fflush (stderr);
1078d1010
<     fflush (stderr);
1129c1061
<         fprintf (stdout, "-%s\n", lines[0][l].line->c_str ());
---
>         fprintf (stdout, "-%s", lines[0][l].line->c_str ());
1132c1064
<         fprintf (stdout, "+%s\n", lines[1][l].line->c_str ());
---
>         fprintf (stdout, "+%s", lines[1][l].line->c_str ());
1139c1071
<         fprintf (stdout, "-%s\n", lines[0][l].line->c_str ());
---
>         fprintf (stdout, "-%s", lines[0][l].line->c_str ());
1146c1078
<         fprintf (stdout, "+%s\n", lines[1][l].line->c_str ());
---
>         fprintf (stdout, "+%s", lines[1][l].line->c_str ());
1152,1248c1084
<     fprintf (stdout, " %s\n", lines[0][o].line->c_str ());
<     o += 1;
<     n += 1;
<   }
< }
< 
< void pass6y ()
< {
<   if (0 < optVerbose) {
<     fprintf (stderr, "# Pass #6y (walking the differences)...\n");
<     fflush (stderr);
<   }
< 
<   // Write the header.
< 
<   // None for side-by-side.
< 
<   // Starting at the top of both files,...
< 
<   int columnWidth = (optPageWidth - 7) / 2;
< 
<   unsigned o = 0;
<   unsigned n = 0;
< 
<   while (o < lines[0].size () || n < lines[1].size ()) {
< 
<     // Find any unmatched lines at this point in the old file.  These
<     // are deletes.
< 
<     unsigned boDeletes = o;
<     while (o < lines[0].size () && lines[0][o].l == ~0) {
<       o += 1;
<     }
< 
<     // Find any unmatched lines at this point in the new file.  These
<     // are inserts.
< 
<     unsigned boInserts = n;
<     while (n < lines[1].size () && lines[1][n].l == ~0) {
<       n += 1;
<     }
< 
<     // We've got deleted line(s) from boDeletes .. o.
<     // We've got deleted line(s) from boInserts .. n.
< 
<     unsigned nDeletes = o - boDeletes;
<     unsigned nInserts = n - boInserts;
< 
<     // We've got...
< 
<     while (boDeletes < o && boInserts < n) {
< 
<       // ... deletes and inserts.
< 
<       fprintf (stdout,
<                "%-*s | %s\n",
<                columnWidth,
<                lines[0][boDeletes].line->substr (0, columnWidth).c_str (),
<                lines[1][boInserts].line->substr (0, columnWidth).c_str ()
<               );
<       boDeletes += 1;
<       boInserts += 1;
<     }
< 
<     while (boDeletes < o) {
< 
<       //  ... just deletes.
< 
<       fprintf (stdout,
<                "%-*s <\n",
<                columnWidth,
<                lines[0][boDeletes].line->substr (0, columnWidth).c_str ()
<               );
<       boDeletes += 1;
<     }
< 
<     while (boInserts < n) {
< 
<       //  ... just inserts.
< 
<       fprintf (stdout,
<                "%-*s > %s\n",
<                columnWidth,
<                "",
<                lines[1][boInserts].line->substr (0, columnWidth).c_str ()
<               );
<       boInserts += 1;
<     }
< 
<     // When we get here, we're dealing with matching lines.
< 
<     fprintf (stdout,
<              "%-*s   %s\n",
<              columnWidth,
<              lines[0][o].line->substr (0, columnWidth).c_str (),
<              lines[1][n].line->substr (0, columnWidth).c_str ()
<             );
---
>     fprintf (stdout, " %s", lines[0][o].line->c_str ());
